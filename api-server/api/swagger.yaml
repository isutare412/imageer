definitions:
  http.createUserReq:
    properties:
      email:
        type: string
      familyName:
        type: string
      givenName:
        type: string
      password:
        type: string
    type: object
  http.createUserRes:
    properties:
      credit:
        type: integer
      email:
        type: string
      familyName:
        type: string
      givenName:
        type: string
      id:
        type: integer
    type: object
  http.getGreetingRes:
    properties:
      msg:
        type: string
    type: object
  http.getUserRes:
    properties:
      credit:
        type: integer
      email:
        type: string
      familyName:
        type: string
      givenName:
        type: string
      id:
        type: integer
    type: object
  http.signInReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  http.signInRes:
    properties:
      token:
        type: string
    type: object
info:
  contact: {}
  description: Endpoint API for image processing service.
  title: Imageer Endpoint API
  version: "0.1"
paths:
  /api/v1/greetings/{name}:
    get:
      consumes:
      - application/json
      description: Greeting by given name
      parameters:
      - description: name for greeting
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/http.getGreetingRes'
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Say greeting
      tags:
      - Greeting
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: Create a user with basic information
      parameters:
      - description: request to create a new user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.createUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/http.createUserRes'
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Create a user
      tags:
      - User
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Get a user with given id
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/http.getUserRes'
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Get a user
      tags:
      - User
  /signCheck:
    get:
      consumes:
      - application/json
      description: Debug sign in taking query or cookie
      parameters:
      - description: jwt token
        in: query
        name: token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Sign check
      tags:
      - Authentication
  /signIn:
    post:
      consumes:
      - application/json
      description: Sign in using email and password
      parameters:
      - description: request to sign in
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.signInReq'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/http.signInRes'
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Sign in
      tags:
      - Authentication
swagger: "2.0"
